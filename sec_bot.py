from datetime import date, timedelta
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from finvizfinance.insider import Insider
from table_lib.plot_table import plot_table
from telegram_api.bot_message import *
import urllib.request

pd.options.mode.chained_assignment = None  # default='warn'

# yesterday's data or y_day = "01-04" if you need a specific date
yesterday = date.today() - timedelta(days=1)
y_day = yesterday.strftime("%d-%m")

# download SPB-exchange's tickers https://spbexchange.ru/ru/listing/securities/list/
file_spb = 'spb_list/spb_list.csv'
url = 'https://spbexchange.ru/ru/listing/securities/list/?csv=download'
urllib.request.urlretrieve(url, file_spb)
ticker_df = pd.read_csv(file_spb, sep=';')
N_ticker = ticker_df['s_RTS_code'].tolist()

# sales
finsider = Insider(option='top week sales')
'''
option: latest, latest buy, latest sales, top week, top week buy, top week sales
default: latest, top owner trade, top owner buy, top owner sales, insider_id - future option
'''
insider_df = finsider.getInsider()
new_df = insider_df.loc[insider_df['Ticker'].isin(N_ticker)]
new_df.columns = ['–¢–∏–∫–µ—Ä', '–ò–Ω—Å–∞–π–¥–µ—Ä', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–î–∞—Ç–∞', '–°–¥–µ–ª–∫–∞', '–¶–µ–Ω–∞', '–ö–æ–ª-–≤–æ',
                  '–°—É–º–º–∞,$', '–û—Å—Ç–∞—Ç–æ–∫ –∞–∫—Ü–∏–π', '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC']

new_df['–ö–æ–ª-–≤–æ'] = new_df['–ö–æ–ª-–≤–æ'].replace('', np.nan).astype('Int64')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = pd.to_datetime(new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'], format='%b %d %I:%M %p')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].dt.strftime('%d-%m %H:%M')
today_df = new_df[new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].str.contains(y_day)]
today_df['–°—É–º–º–∞,$'] = pd.Series(['{:,.2f}'.format(val) for val in today_df['–°—É–º–º–∞,$']],
                                index=today_df['–°—É–º–º–∞,$'].index, dtype='object')

# Checking for SPB-tickers
if len(today_df['–¢–∏–∫–µ—Ä'].value_counts()) > 0:
    sale_df = today_df.loc[today_df['–°–¥–µ–ª–∫–∞'].isin(['Sale'])]
    sale_df = sale_df.loc[:, '–¢–∏–∫–µ—Ä': '–°—É–º–º–∞,$']
    sale_df2 ='       ' + sale_df.astype(str) + '       '
    sale_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] = '    ' + sale_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] + '    '
    sale_df2['–°—É–º–º–∞,$'] = sale_df2['–°—É–º–º–∞,$'].str.replace(".00", "", regex=False)

    data = np.vstack((sale_df2.columns.values, sale_df2.values.astype(str)))
    plot_table(data)
    plt.savefig('image_res/sale.jpg')

    tk_df = sale_df.drop_duplicates('–¢–∏–∫–µ—Ä')
    tk_df['–¢–∏–∫–µ—Ä'] = '$' + tk_df['–¢–∏–∫–µ—Ä'].astype(str)
    tickers = ' '.join(tk_df['–¢–∏–∫–µ—Ä'].tolist())

    files = {'photo': open('image_res/sale.jpg', 'rb')}

    send_photo_telegram(files, f'üî•üî•üî• –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–Ω—Å–∞–π–¥–µ—Ä—Å–∫–∏–µ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ {y_day}-2021\n{tickers}')

else:
    send_text_telegram(f'–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏–Ω—Å–∞–π–¥–µ—Ä—Å–∫–∏—Ö –ø—Ä–æ–¥–∞–∂ –Ω–∞ {y_day}-2021 –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ')

# buy
finsider = Insider(option='top week buy')
insider_df = finsider.getInsider()
new_df = insider_df.loc[insider_df['Ticker'].isin(N_ticker)]
new_df.columns = ['–¢–∏–∫–µ—Ä', '–ò–Ω—Å–∞–π–¥–µ—Ä', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–î–∞—Ç–∞', '–°–¥–µ–ª–∫–∞', '–¶–µ–Ω–∞', '–ö–æ–ª-–≤–æ',
                  '–°—É–º–º–∞,$', '–û—Å—Ç–∞—Ç–æ–∫ –∞–∫—Ü–∏–π', '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC']

new_df['–ö–æ–ª-–≤–æ'] = new_df['–ö–æ–ª-–≤–æ'].replace('', np.nan).astype('Int64')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = pd.to_datetime(new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'], format='%b %d %I:%M %p')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].dt.strftime('%d-%m %H:%M')
today_df = new_df[new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].str.contains(y_day)]
today_df['–°—É–º–º–∞,$'] = pd.Series(['{:,.2f}'.format(val) for val in today_df['–°—É–º–º–∞,$']],
                                index=today_df['–°—É–º–º–∞,$'].index,  dtype = 'object')

if len(today_df['–¢–∏–∫–µ—Ä'].value_counts()) > 0:
    buy_df = today_df.loc[today_df['–°–¥–µ–ª–∫–∞'].isin(['Buy'])]
    buy_df = buy_df.loc[:, '–¢–∏–∫–µ—Ä': '–°—É–º–º–∞,$']
    buy_df2 = '       ' + buy_df.astype(str) + '       '
    buy_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] = '    ' + buy_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] + '    '
    buy_df2['–°—É–º–º–∞,$'] = buy_df2['–°—É–º–º–∞,$'].str.replace(".00", "", regex=False)
    
    data = np.vstack((buy_df2.columns.values, buy_df2.values.astype(str)))
    plot_table(data)
    plt.savefig('image_res/buy.jpg')

    tk_df2 = buy_df.drop_duplicates('–¢–∏–∫–µ—Ä')
    tk_df2['–¢–∏–∫–µ—Ä'] = '$' + tk_df2['–¢–∏–∫–µ—Ä'].astype(str)
    tickers = ' '.join(tk_df2['–¢–∏–∫–µ—Ä'].tolist())

    files = {'photo': open('image_res/buy.jpg', 'rb')}

    send_photo_telegram(files, f'üî•üî•üî• –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–Ω—Å–∞–π–¥–µ—Ä—Å–∫–∏–µ –ø–æ–∫—É–ø–∫–∏ –Ω–∞ {y_day}-2021\n{tickers}')

else:
    send_text_telegram(f'–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏–Ω—Å–∞–π–¥–µ—Ä—Å–∫–∏—Ö –ø–æ–∫—É–ø–æ–∫ –Ω–∞ {y_day}-2021 –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ')

# top sales
finsider = Insider(option='top owner sales')
insider_df = finsider.getInsider()
new_df = insider_df.loc[insider_df['Ticker'].isin(N_ticker)]
new_df.columns = ['–¢–∏–∫–µ—Ä', '–ò–Ω—Å–∞–π–¥–µ—Ä', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–î–∞—Ç–∞', '–°–¥–µ–ª–∫–∞', '–¶–µ–Ω–∞', '–ö–æ–ª-–≤–æ',
                  '–°—É–º–º–∞,$', '–û—Å—Ç–∞—Ç–æ–∫ –∞–∫—Ü–∏–π', '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC']

new_df['–ö–æ–ª-–≤–æ'] = new_df['–ö–æ–ª-–≤–æ'].replace('', np.nan).astype('Int64')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = pd.to_datetime(new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'], format='%b %d %I:%M %p')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].dt.strftime('%d-%m %H:%M')
today_df = new_df[new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].str.contains(y_day)]
today_df['–°—É–º–º–∞,$'] = pd.Series(['{:,.2f}'.format(val) for val in today_df['–°—É–º–º–∞,$']],
                                index=today_df['–°—É–º–º–∞,$'].index,  dtype = 'object')

if len(today_df['–¢–∏–∫–µ—Ä'].value_counts()) > 0:
    sale_df = today_df.loc[today_df['–°–¥–µ–ª–∫–∞'].isin(['Sale'])]
    sale_df = sale_df.loc[:, '–¢–∏–∫–µ—Ä': '–°—É–º–º–∞,$']
    sale_df2 = '       ' + sale_df.astype(str) + '       '
    sale_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] = '    ' + sale_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] + '    '
    sale_df2['–°—É–º–º–∞,$'] = sale_df2['–°—É–º–º–∞,$'].str.replace(".00", "", regex=False)

    data = np.vstack((sale_df2.columns.values, sale_df2.values.astype(str)))
    plot_table(data)
    plt.savefig('image_res/sale_top.jpg')

    tk_df = sale_df.drop_duplicates('–¢–∏–∫–µ—Ä')
    tk_df['–¢–∏–∫–µ—Ä'] = '$' + tk_df['–¢–∏–∫–µ—Ä'].astype(str)
    tickers = ' '.join(tk_df['–¢–∏–∫–µ—Ä'].tolist())

    files = {'photo': open('image_res/sale_top.jpg', 'rb')}

    send_photo_telegram(files, f'üî•üî•üî• –ü—Ä–æ–¥–∞–∂–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–æ–º–ø–∞–Ω–∏–π (–¥–æ–ª—è –±–æ–ª–µ–µ 10%) –Ω–∞ {y_day}-2021\n{tickers}')

else:
    send_text_telegram(f'–ü—Ä–æ–¥–∞–∂–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–æ–º–ø–∞–Ω–∏–π (–¥–æ–ª—è –±–æ–ª–µ–µ 10%) –Ω–∞ {y_day}-2021 –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã')

# top buy
finsider = Insider(option='top owner buy')
insider_df = finsider.getInsider()
new_df = insider_df.loc[insider_df['Ticker'].isin(N_ticker)]
new_df.columns = ['–¢–∏–∫–µ—Ä', '–ò–Ω—Å–∞–π–¥–µ—Ä', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–î–∞—Ç–∞', '–°–¥–µ–ª–∫–∞', '–¶–µ–Ω–∞', '–ö–æ–ª-–≤–æ',
                  '–°—É–º–º–∞,$', '–û—Å—Ç–∞—Ç–æ–∫ –∞–∫—Ü–∏–π', '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC']

new_df['–ö–æ–ª-–≤–æ'] = new_df['–ö–æ–ª-–≤–æ'].replace('', np.nan).astype('Int64')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = pd.to_datetime(new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'], format='%b %d %I:%M %p')
new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'] = new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].dt.strftime('%d-%m %H:%M')
today_df = new_df[new_df['–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ SEC'].str.contains(y_day)]
today_df['–°—É–º–º–∞,$'] = pd.Series(['{:,.2f}'.format(val) for val in today_df['–°—É–º–º–∞,$']],
                                index=today_df['–°—É–º–º–∞,$'].index,  dtype = 'object')

if len(today_df['–¢–∏–∫–µ—Ä'].value_counts()) > 0:
    buy_df = today_df.loc[today_df['–°–¥–µ–ª–∫–∞'].isin(['Buy'])]
    buy_df = buy_df.loc[:, '–¢–∏–∫–µ—Ä': '–°—É–º–º–∞,$']
    buy_df2 = '       ' + buy_df.astype(str) + '       '
    buy_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] = '    ' + buy_df2['–î–æ–ª–∂–Ω–æ—Å—Ç—å'] + '    '
    buy_df2['–°—É–º–º–∞,$'] = buy_df2['–°—É–º–º–∞,$'].str.replace(".00", "", regex=False)

    data = np.vstack((buy_df2.columns.values, buy_df2.values.astype(str)))
    plot_table(data)
    plt.savefig('image_res/buy_top.jpg')

    tk_df2 = buy_df.drop_duplicates('–¢–∏–∫–µ—Ä')
    tk_df2['–¢–∏–∫–µ—Ä'] = '$' + tk_df2['–¢–∏–∫–µ—Ä'].astype(str)
    tickers = ' '.join(tk_df2['–¢–∏–∫–µ—Ä'].tolist())

    files = {'photo': open('image_res/buy_top.jpg', 'rb')}

    send_photo_telegram(files, f'üî•üî•üî• –ü–æ–∫—É–ø–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–æ–º–ø–∞–Ω–∏–π (–¥–æ–ª—è –±–æ–ª–µ–µ 10%) –Ω–∞ {y_day}-2021\n{tickers}')

else:
    send_text_telegram(f'–ü–æ–∫—É–ø–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–æ–º–ø–∞–Ω–∏–π (–¥–æ–ª—è –±–æ–ª–µ–µ 10%) –Ω–∞ {y_day}-2021 –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã')
